apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId "com.doctoror.particleswallpaper"

        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkAllWarnings true
    }

    task copyTestClasses(type: Copy) {
        from "build/tmp/kotlin-classes/debugUnitTest"
        into "build/intermediates/classes/debug"
    }

    task copySdkClasses(type: Copy) {
        from "build/tmp/kotlin-classes/debug"
        into "build/intermediates/classes/debug"
    }

//    afterEvaluate {
//        compileDebugUnitTestSources.dependsOn copyTestClasses
//        compileReleaseUnitTestSources.dependsOn copyTestClasses
//        compileDebugAndroidTestSources.dependsOn copySdkClasses
//    }
}

dependencies {
    def d = rootProject.ext.wallpaperappDependencies
    def td = rootProject.ext.wallpaperappTestDependencies

    androidTestCompile td.testRunner
    androidTestCompile td.testRules

    androidTestCompile td.kotlin
    androidTestCompile td.kotlinTest
    androidTestCompile td.kotlinReflect

    compile project (':library')

    compile d.kotlin
    compile d.rxJava

    compile d.colorPicker
    compile d.picasso

    compile d.gendalf
    annotationProcessor d.gendalfCompiler
    kapt d.gendalfCompiler

    compile d.dagger
    annotationProcessor d.daggerCompiler
    kapt d.daggerCompiler

    compile d.lifecycle
    annotationProcessor d.lifecycleCompiler
    kapt d.lifecycleCompiler
}

repositories {
    mavenCentral()
}
